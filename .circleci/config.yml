orbs:
  slack: circleci/slack@3.4.2
version: 2.1
executors:
  app_executor:
    docker:
      - image: circleci/node:latest
    working_directory: ~/project
  slack_executor:
    docker:
      - image: cibuilds/base:latest
    resource_class: small
      

aliases:
  - &show_current_branch
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore_cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json" }}
        - app-
  - &install_dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save_cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &install_aws_cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python-pip python-dev build-essential
  - &build_frontend
    run:
      name: Build Frontend
      command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r * .[^.]*
        echo "Build successful"

jobs:
  build:
    executor: app_executor
    steps:
      - checkout
      - *show_current_branch
      - *restore_cache
      - *install_dependencies
      - *save_cache

  linting:
    executor: app_executor
    steps:
      - checkout
      - *show_current_branch
      - *restore_cache
      - run:
          name: Run Linting
          command: npm run lint

  prettier:
    executor: app_executor
    steps:
      - checkout
      - *show_current_branch
      - *restore_cache
      - run:
          name: Run Prettier Check
          command: npm run prettier:check

  deploy_to_s3:
    executor: app_executor
    steps:
      - checkout
      - *show_current_branch
      - *install_aws_cli
      - *build_frontend
      - run:
          name: Deploy Frontend to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]
            then 
              aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_PROD_BUCKET} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_STAGING_BUCKET} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_DEV_BUCKET} --delete
            fi
          
  deploy_to_cloudfront:
    executor: app_executor
    steps:
      - checkout
      - *show_current_branch
      - *install_aws_cli
      - *build_frontend
      - run:
          name: Deploy Frontend to CloudFront
          command: |
            aws configure set preview.cloudfront true
            if [ "${CIRCLE_BRANCH}" == "production" ]
            then 
              aws cloudfront create-invalidation --distribution-id ${PROD_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi     
     
  notify_via_slack:
    executor: slack_executor
    steps:
      - slack/notify:
          message: ${CIRCLE_BRANCH} branch deployment is complete.
          webhook: ${SLACK_WEBHOOK}
      - slack/status:
          webhook: ${SLACK_WEBHOOK}

workflows:
  build_and_deploy:
    jobs:
      - build
      - linting:
          requires:
            - build
          filters:
            branches:
              only:
                - dev
                - staging
                - production 
      - prettier:
          requires:
            - build
          filters:
            branches:
              only:
                - dev
                - staging
                - production 
      - deploy_to_s3:
          requires:
            - linting
            - prettier
          filters:
            branches:
              only:
                - dev
                - staging
                - production 
      - deploy_to_cloudfront:
          requires:
            - deploy_to_s3
          filters:
            branches:
              only:
                - dev
                - staging
                - production
      - notify_via_slack:
          requires:
            - deploy_to_cloudfront
          filters:
            branches:
              only:
                - dev
                - staging
                - production
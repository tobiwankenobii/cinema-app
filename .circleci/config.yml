version: 2.1
jobs:

  build:
    docker:
    - image: circleci/node:latest
    working_directory: ~/project
    steps:
      - checkout
      - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
      - restore_cache:
        keys:
          - app-{{ checksum "package.json" }}
          - app-
      - run:
        name: Install dependencies
        command: npm install
      - save_cache:
        paths:
          - node_modules
        key:
          - app-{{ checksum "package.json" }}

  deploy_to_s3:
    docker:
    - image: circleci/node:latest
    working_directory: ~/project
    steps:
      - checkout
      - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
      - run:
        name: Installing AWS CLI
        working_directory: /
        command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
      - run:
        name: Build Frontend
        command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build successful"
      - run:
        name: Deploy Frontend to S3
        command: |
          if [ "${CIRCLE_BRANCH}" == "production" ]
          then 
            aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_PROD_BUCKET} --delete
          elif [ "${CIRCLE_BRANCH}" == "staging" ]
            aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_STAGING_BUCKET} --delete
          else
            aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_DEV_BUCKET} --delete
          fi
          
  deploy_to_cloudfront:
    docker:
    - image: circleci/node:latest
    working_directory: ~/project
    steps:
      - checkout
      - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
      - run:
        name: Installing AWS CLI
        working_directory: /
        command: |
          sudo apt-get -y -qq update
          sudo apt-get install -y awscli
          sudo apt-get install -y python-pip python-dev build-essential
      - run:
        name: Build Frontend
        command: |
          npm install
          npm run build
          cd build
          zip ../build.zip -r * .[^.]*
          echo "Build successful"
      - run:
        name: Deploy Frontend to CloudFront
        command: |
          aws configure set preview.cloudfront true
          if [ "${CIRCLE_BRANCH}" == "production" ]
          then 
            aws cloudfront create-invalidation --distribution-id ${PROD_DISTRIBUTION_ID} --paths /\*
          elif [ "${CIRCLE_BRANCH}" == "staging" ]
            aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
          else
            aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
          fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy_to_s3:
          requires:
            - build
          filters:
            branches:
              only:
                - dev
                - staging
                - production 
      - deploy_to_cloudfront:
          requires:
            - deploy_to_s3
          filters:
            branches:
              only:
                - dev
                - staging
                - production 